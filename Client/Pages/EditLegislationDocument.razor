@page "/documente/legislatie/editeaza/{DocumentId?}"
@using CMVMD.Client.Services.Document
@using CMVMD.Shared.Models
@using System.Text.Json
@inject IDocumentService _documentService
@inject NavigationManager Navigation

<div style="padding-left: 10%; padding-right: 10%;">
    <RadzenTemplateForm TItem="DocumentDto" Data=@documentDto Submit=@SaveDocument>
        <RadzenStack Gap="1rem" class="rz-p-sm-12">
            <RadzenText style="padding-bottom: 1%; align-items: center;" TextStyle="TextStyle.H4">
                <strong>Editează documentul</strong>
            </RadzenText>
            @if (documentDto.File != null)
            {
                <RadzenText style="padding-top: 1%; align-items: center;" TextStyle="TextStyle.H6">
                    @documentDto.File.FileName
                </RadzenText>
            }
            <RadzenUpload Url="api/upload/file/single" Complete="@((e)=>OnCompleted(e))" Icon="upload"
                ChooseText="Selecteză un document" Style="width: 100%" Accept="*/*"
                InputAttributes="@(new Dictionary<string,object>(){ { "aria-label", "select file" }})">
            </RadzenUpload>
            <RadzenFormField Text="Numele">
                <ChildContent>
                    <RadzenTextBox Name="Name" @bind-Value=@documentDto.Name />
                </ChildContent>
                <Helper>
                    <RadzenRequiredValidator Component="Name" Text="Documentul trebuie sa aibă un nume." />
                </Helper>
            </RadzenFormField>
            <RadzenFormField Text="Descriere">
                <ChildContent>
                    <RadzenTextBox Name="Description" @bind-Value=@documentDto.Description />
                </ChildContent>
                <Helper>
                    <RadzenRequiredValidator Component="Description" Text="Documentul trebuie sa aibă o descriere." />
                </Helper>
            </RadzenFormField>
            <RadzenButton ButtonStyle="ButtonStyle.Primary" ButtonType="ButtonType.Submit" Text="Adaugă"></RadzenButton>
        </RadzenStack>
    </RadzenTemplateForm>
</div>

@code {
    [Parameter]
    public string DocumentId { get; set; } = string.Empty;
    private DocumentDto documentDto = new DocumentDto();

    protected override async Task OnInitializedAsync()
    {
        if (!string.IsNullOrEmpty(DocumentId))
        {
            documentDto = await _documentService.GetLegislationDocumentById(DocumentId);
        }
    }

    private void OnCompleted(UploadCompleteEventArgs e)
    {
        var file = JsonSerializer.Deserialize<FileDto>(e.JsonResponse);
        documentDto.File = file;
        documentDto.FileId = file!.Id;
    }

    private async Task SaveDocument()
    {
        if (string.IsNullOrEmpty(DocumentId))
        {
            await _documentService.AddLegislationDocument(documentDto);
        }
        else
        {
            await _documentService.EditLegislationDocument(documentDto);
        }
        Navigation.NavigateTo("/");
    }
}
