@page "/articol/{ArticleId}"
@inject IArticleService _articleService
@inject NavigationManager Navigation

@using CMVMD.Client.Services.Article
@using CMVMD.Shared.Models

@if (article != null)
{
    <div class="content-container">
    @if (article.File != null)
        {
            <img src="@article.File.FileUrl" class="article-image" alt="Article Image" />
        }

        <RadzenText TextStyle="TextStyle.H4" FontWeight="700" style="margin-top: 2rem; margin-bottom: 1rem;"
            Color="#333333">
            @article.Title
        </RadzenText>

        <RadzenText TextStyle="TextStyle.H5" FontWeight="400" Color="#6c757d" class="subtitle">
            @article.SubTitle
        </RadzenText>

        <div class="article-text">
            <RadzenText TextStyle="TextStyle.Body1" FontWeight="400" Color="#212529">
                @((MarkupString)article.Text)
            </RadzenText>
        </div>

        <div class="button-container">
            <RadzenButton Text="Înapoi" Icon="arrow_back" ButtonStyle="ButtonStyle.Secondary"
                Click="@(args => Navigation.NavigateTo("/"))" />
            <RadzenButton Text="Editează" Icon="edit" ButtonStyle="ButtonStyle.Info"
                Click="@(args => NavigateToEditPage())" />

            <RadzenButton Text="Șterge" Icon="delete" ButtonStyle="ButtonStyle.Danger" Click="@(args => DeleteArticle())" />
        </div>
    </div>
}
else
{
    <div class="container">
    <RadzenCard>
        <RadzenText Text="Loading..." />
    </RadzenCard>
</div>
}

@code {
    [Parameter]
    public string ArticleId { get; set; } = default!;

    private ArticleDto? article { get; set; }

    protected override async Task OnInitializedAsync()
    {
        article = await _articleService.GetByIdAsync(ArticleId);
    }

    private void NavigateToEditPage()
    {
        Navigation.NavigateTo($"/articol/editeaza/{ArticleId}");
    }

    private async Task DeleteArticle()
    {
        await _articleService.DeleteById(ArticleId);
        Navigation.NavigateTo("/articole");
    }
}
