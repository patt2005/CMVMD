@page "/articol/{ArticleId}"
@inject IArticleService _articleService
@inject NavigationManager Navigation

@using CMVMD.Client.Services.Article
@using CMVMD.Shared.Models

@if (article != null)
{
    <div style="padding: 2rem;">
    <RadzenCard Style="background-color: #ffffff; box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2); border-radius: 10px;">
        @if (article.File != null)
            {
                <div style="text-align: center;">
                    <RadzenImage Path="@article.File.FileUrl" Style="max-width: 50%; height: auto; border-radius: 10px;"
                        AlternateText="Article Image" />
                </div>
            }

            <div style="padding: 1rem;">
                <RadzenText TextStyle="TextStyle.H4" FontWeight="700" Color="#333333">
                    @article.Title
                </RadzenText>

                <RadzenText TextStyle="TextStyle.H6" FontWeight="400" Color="#6c757d" Style="margin-top: 0.5rem;">
                    @article.SubTitle
                </RadzenText>

                <div style="margin-top: 2%; padding-top: 10px;">
                    <RadzenText TextStyle="TextStyle.Body1" FontWeight="400" Color="#212529">
                        @((MarkupString)article.Text)
                    </RadzenText>
                </div>

                <div style="text-align: right; margin-top: 2%;">
                    <RadzenButton Text="ÃŽnapoi" Icon="arrow_back" ButtonStyle="ButtonStyle.Secondary"
                        Click="@(args => Navigation.NavigateTo("/"))" />
                </div>
            </div>
        </RadzenCard>
    </div>
}
else
{
    <div style="padding: 2rem;">
    <RadzenCard>
        <RadzenText Text="Loading..." />
    </RadzenCard>
</div>
}

@code {
    [Parameter]
    public string ArticleId { get; set; } = default!;

    private ArticleDto? article { get; set; }

    protected override async Task OnInitializedAsync()
    {
        article = await _articleService.GetByIdAsync(ArticleId);
    }
}
