@page "/calendar"
@using CMVMD.Client.Services
@using CMVMD.Client.Services.Article
@using CMVMD.Client.Services.Event
@using CMVMD.Shared.Models
@inject IEventService _eventService
@inject DialogService _dialogService

<PageTitle>Evenimente</PageTitle>

<RadzenText style="align-items: center;" class="text-center" TextStyle="TextStyle.H4"><strong>Calendarul
        evenimentelor</strong></RadzenText>

@inject TooltipService TooltipService

@if (events.Count() != 0 || isLoading)
{
    <RadzenScheduler style="height: 75vh;" TItem="EventDto" Data="@events" StartProperty="StartDate" EndProperty="EndDate"
    TextProperty="Title" SelectedIndex="0" AppointmentSelect="OnAppointmentClick">
    <RadzenMonthView />
    <RadzenYearView />
</RadzenScheduler>
}
else
{
    <div style="padding: 2rem;">
    <RadzenCard>
        <RadzenText Text="Nu există încă evenimente în calendar." />
    </RadzenCard>
</div>
}

@code {
    IEnumerable<EventDto> events = Enumerable.Empty<EventDto>();
    private bool isLoading { get; set; }

    protected override async Task OnInitializedAsync()
    {
        isLoading = false;
        events = await _eventService.GetEventsAsync();
        Console.WriteLine(events.Count().ToString());
        foreach (var eventObj in events)
        {
            Console.WriteLine(eventObj.Title);
        }
        isLoading = true;
        StateHasChanged();
    }

    private void OnAppointmentClick(SchedulerAppointmentSelectEventArgs<EventDto> args)
    {
        var parameters = new Dictionary<string, object>
{
{ "Event", args.Data }
};

        _dialogService.Open<DialogTemplate>(
        "Detalii",
        parameters,
        new DialogOptions { Width = "500px", Height = "300px" }
        );
    }
}
