@page "/documente/formare/editeaza/{DocumentId?}"
@using CMVMD.Client.Services.Document
@using CMVMD.Shared.Models
@using System.Text.Json
@inject IDocumentService _documentService
@inject NavigationManager Navigation
@inject NotificationService NotificationService

<Microsoft.AspNetCore.Components.Authorization.AuthorizeView>
    <Authorized Context="auth">
        <RadzenTemplateForm TItem="DocumentDto" Data=@documentDto Submit=@SaveDocument Context="td">
            <RadzenStack Gap="1rem" class="rz-p-sm-12">
                <RadzenText style="padding-bottom: 1%; align-items: center;" TextStyle="TextStyle.H4">
                    <strong>Editează documentul</strong>
                </RadzenText>
                @if (documentDto.File != null)
                {
                    <RadzenText style="padding-top: 1%; align-items: center;" TextStyle="TextStyle.H6">
                        @documentDto.File.FileName
                    </RadzenText>
                }
                <RadzenUpload Url="api/upload/file/single" Complete="@((e)=>OnCompleted(e))" Icon="upload"
                    ChooseText="Selecteză un document" Style="width: 100%" Accept="*/*"
                    InputAttributes="@(new Dictionary<string,object>(){ { "aria-label", "select file" }})">
                </RadzenUpload>
                <RadzenFormField Text="Numele">
                    <ChildContent>
                        <RadzenTextBox Name="Name" @bind-Value=@documentDto.Name />
                    </ChildContent>
                    <Helper>
                        <RadzenRequiredValidator Component="Name" Text="Documentul trebuie sa aibă un nume." />
                    </Helper>
                </RadzenFormField>
                <RadzenFormField Text="Descriere">
                    <ChildContent>
                        <RadzenTextBox Name="Description" @bind-Value=@documentDto.Description />
                    </ChildContent>
                    <Helper>
                        <RadzenRequiredValidator Component="Description"
                            Text="Documentul trebuie sa aibă o descriere." />
                    </Helper>
                </RadzenFormField>
                <RadzenButton ButtonStyle="ButtonStyle.Primary" Icon="save" ButtonType="ButtonType.Submit"
                    Text="Salvează">
                </RadzenButton>
            </RadzenStack>
        </RadzenTemplateForm>
    </Authorized>
    <NotAuthorized>
        <div class="alert alert-danger" style="margin-bottom: 1rem;">
            Nu aveți permisiunea de a accesa această pagină.
        </div>
    </NotAuthorized>
</Microsoft.AspNetCore.Components.Authorization.AuthorizeView>

@code {
    [Parameter]
    public string DocumentId { get; set; } = string.Empty;
    private DocumentDto documentDto = new DocumentDto();

    protected override async Task OnInitializedAsync()
    {
        if (!string.IsNullOrEmpty(DocumentId))
        {
            documentDto = await _documentService.GetTrainingDocumentById(DocumentId);
        }
    }

    private void OnCompleted(UploadCompleteEventArgs e)
    {
        var file = JsonSerializer.Deserialize<FileDto>(e.JsonResponse);
        documentDto.File = file;
        documentDto.FileId = file!.Id;
    }

    private async Task SaveDocument()
    {
        if (documentDto.File == null)
        {
            NotificationService.Notify(new NotificationMessage
                {
                    Severity = NotificationSeverity.Warning,
                    Summary = "Lipsă document",
                    Detail = "Documentul nu poate fi gol.",
                    Duration = 4000
                });
            return;
        }
        if (string.IsNullOrEmpty(DocumentId))
        {
            await _documentService.AddTrainingDocument(documentDto);
        }
        else
        {
            await _documentService.EditTrainingDocument(documentDto);
        }
        Navigation.NavigateTo("/");
    }
}
